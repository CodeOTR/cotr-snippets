{
    "C++ String Type" : {
        "prefix": "cotrString",
        "body": [
            "std::string"
        ],
        "description": "The C++ string type."
    },
    "C++ Integer Type" : {
        "prefix": "cotrInt",
        "body": [
            "int"
        ],
        "description": "The C++ int type."
    },
    "C++ Double Type" : {
        "prefix": "cotrNum",
        "body": [
            "double"
        ],
        "description": "The C++ double type."
    },
    "C++ Float Type" : {
        "prefix": "cotrNumAlt",
        "body": [
            "float"
        ],
        "description": "The C++ float type."
    },
    "C++ Boolean Type" : {
        "prefix": "cotrBool",
        "body": [
            "bool"
        ],
        "description": "The C++ bool type."
    },
    "C++ Character Type" : {
        "prefix": "cotrChar",
        "body": [
            "char"
        ],
        "description": "The C++ char type."
    },
    "C++ Create Variable" : {
        "prefix": "cotrVar",
        "body": [
            "${1:type} ${2:myVar} = ${3:value};"
        ],
        "description": "Creates a variable in C++."
    },
    "C++ Create Constant" : {
        "prefix": "cotrConst",
        "body": [
            "const ${1:type} ${2:myConst} = ${3:value};"
        ],
        "description": "Creates a constant variable in C++."
    },
    "C++ Static Variable" : {
        "prefix": "cotrStaticVar",
        "body": [
            "static ${2:type} ${3:myStaticVar} = ${4:value};",
            "",
            "// Access the static variable",
            "// MyClass::${3:myStaticVar}"
        ],
        "description": "Creates a static variable in a C++ class."
    },
    "C++ Create Array" : {
        "prefix": "cotrArray",
        "body": [
            "${1:type} ${2:myArray}[${3:size}] = {${4:values}};"
        ],
        "description": "Creates an array in C++."
    },
    "C++ Create Vector" : {
        "prefix": "cotrVector",
        "body": [
            "std::vector<${1:type}> ${2:myVector} = {${3:values}};"
        ],
        "description": "Creates a vector in C++."
    },
    "C++ Create Map" : {
        "prefix": "cotrMap",
        "body": [
            "std::map<${1:keyType}, ${2:valueType}> ${3:myMap} = {",
            "  {${4:key1}, ${5:value1}},",
            "  {${6:key2}, ${7:value2}},",
            "  // Add more key-value pairs here",
            "};"
        ],
        "description": "Creates a map in C++."
    },
    "C++ Print" : {
        "prefix": "cotrPrint",
        "body": [
            "std::cout << ${1:'Your message here'} << std::endl;"
        ],
        "description": "Prints a message to the console in C++."
    },
    "C++ For Loop" : {
        "prefix": "cotrForLoop",
        "body": [
            "for (int ${1:i} = 0; $1 < ${2:10}; $1++) {",
            "  // Your code here",
            "}"
        ],
        "description": "Creates a for loop that iterates through a set of numbers with the index in C++."
    },
    "C++ For...In Loop" : {
        "prefix": "cotrForInLoop",
        "body": [
            "for (auto ${1:item} : ${2:iterable}) {",
            "  // Your code here",
            "}"
        ],
        "description": "Iterates over an iterable object in C++."
    },
    "C++ While Loop" : {
        "prefix": "cotrWhileLoop",
        "body": [
            "while (${1:condition}) {",
            "  // Your code here",
            "}"
        ],
        "description": "Creates a while loop in C++."
    },
    "C++ Do...While Loop" : {
        "prefix": "cotrDoWhileLoop",
        "body": [
            "do {",
            "  // Your code here",
            "} while (${1:condition});"
        ],
        "description": "Creates a do...while loop in C++."
    },
    "C++ Switch Statement" : {
        "prefix": "cotrSwitch",
        "body": [
            "switch (${1:variable}) {",
            "  case ${2:value1}:",
            "    // Your code here",
            "    break;",
            "  case ${3:value2}:",
            "    // Your code here",
            "    break;",
            "  default:",
            "    // Your code here",
            "}"
        ],
        "description": "Creates a switch statement in C++."
    },
    "C++ Function" : {
        "prefix": "cotrFunc",
        "body": [
            "${1:void} ${2:myFunction}(${3:parameters}) {",
            "  // Your code here",
            "}"
        ],
        "description": "Creates a function in C++."
    },
    "C++ Comment" : {
        "prefix": "cotrComment",
        "body": [
            "// ${1:Your comment here}"
        ],
        "description": "Creates a single-line comment in C++."
    },
    "C++ Multi-Line Comment" : {
        "prefix": "cotrMultiComment",
        "body": [
            "/*",
            " * ${1:Your comment here}",
            " */"
        ],
        "description": "Creates a multi-line comment in C++."
    },
    "C++ Throw Exception" : {
        "prefix": "cotrThrow",
        "body": [
            "throw ${1:Exception('Your message here')};"
        ],
        "description": "Throws an exception in C++."
    },
    "C++ Try Catch" : {
        "prefix": "cotrTryCatch",
        "body": [
            "try {",
            "  // Your code here",
            "} catch (${1:exceptionType} ${2:exception}) {",
            "  // Your code here",
            "}"
        ],
        "description": "Creates a try...catch block in C++."
    },
    "C++ Enum" : {
        "prefix": "cotrEnum",
        "body": [
            "enum class ${1:MyEnum} {",
            "  ${2:value1},",
            "  ${3:value2},",
            "  // Add more values here",
            "};"
        ],
        "description": "Creates an enum in C++."
    },
    "C++ Class" : {
        "prefix": "cotrClass",
        "body": [
            "class ${1:MyClass} {",
            "  // Your code here",
            "};"
        ],
        "description": "Creates a class in C++."
    },
    "C++ If Statement" : {
        "prefix": "cotrIf",
        "body": [
            "if (${1:condition}) {",
            "  // Your code here",
            "}"
        ],
        "description": "Creates an if statement in C++."
    },
    "C++ If Else Statement" : {
        "prefix": "cotrIfElse",
        "body": [
            "if (${1:condition}) {",
            "  // Your code here",
            "} else if (${2:condition}) {",
            "  // Your code here",
            "} else {",
            "  // Your code here",
            "}"
        ],
        "description": "Creates an if...else statement in C++."
    },
    "C++ Ternary Operator" : {
        "prefix": "cotrTernary",
        "body": [
            "${1:condition} ? ${2:trueValue} : ${3:falseValue}"
        ],
        "description": "Creates a ternary operator in C++."
    },
    "C++ Lambda Function" : {
        "prefix": "cotrLambda",
        "body": [
            "auto ${1:myLambda} = [](${2:parameters}) -> ${3:returnType} {",
            "  // Your code here",
            "};"
        ],
        "description": "Creates a lambda function in C++."
    }
}
	  
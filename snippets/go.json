{
	"Go String Type" : {
		"prefix" : "cotrString",
		"body" : [
			"string"
		],
		"description" : "The Go string type."
	},
	"Go Integer Type" : {
		"prefix" : "cotrInt",
		"body" : [
			"int"
		],
		"description" : "The Go int type."
	},
	"Go Float Type" : {
		"prefix" : "cotrNum",
		"body" : [
			"float64"
		],
		"description" : "The Go float64 type."
	},
	"Go Boolean Type" : {
		"prefix" : "cotrBool",
		"body" : [
			"bool"
		],
		"description" : "The Go bool type."
	},
    "Go Create Variable" : {
        "prefix" : "cotrVar",
        "body" : [
            "var ${1:variableName} ${2:variableType} = ${3:variableValue}"
        ],
        "description" : "Creates a variable in Go using the var keyword"
    },
    "Go Create Constant" : {
        "prefix" : "cotrConst",
        "body" : [
            "const ${1:variableName} ${2:variableType} = ${3:variableValue}"
        ],
        "description" : "Creates a constant variable in Go using the const keyword"
    },
    "Go Create Map" : {
        "prefix" : "cotrMap",
        "body" : [
            "var ${1:mapName} = map[${2:keyType}]${3:valueType}{",
            "    ${4:key1} : ${5:value1},",
            "    ${6:key2} : ${7:value2}",
            "}"
        ],
        "description" : "Creates a map in Go"
    },
    "Go Generate Map" : {
        "prefix" : "cotrGenMap",
        "body" : [
            "var ${1:mapName} = make(map[${2:keyType}]${3:valueType})",
            "${1:mapName}[${4:key1}] = ${5:value1}",
            "${1:mapName}[${6:key2}] = ${7:value2}"
        ],
        "description" : "Generates a map in Go"
    },
    "Go Create Array" : {
        "prefix" : "cotrList",
        "body" : [
            "var ${1:arrayName} = []${2:arrayType}{",
            "    ${3:value1},",
            "    ${4:value2}",
            "}"
        ],
        "description" : "Creates an array in Go"
    },
    "Go Generate Array" : {
        "prefix" : "cotrGenList",
        "body" : [
            "var ${1:arrayName} = []${2:arrayType}{",
            "    ${3:value1},",
            "    ${4:value2}",
            "}"
        ],
        "description" : "Generates an array in Go"
    },
    "Go Print" : {
        "prefix" : "cotrPrint",
        "body" : [
            "fmt.Println(${1:message})"
        ],
        "description" : "Prints a message to the console in Go"
    },
    "Go For Loop" : {
        "prefix" : "cotrForLoop",
        "body" : [
            "for ${1:i} := ${2:0}; $1 < ${3:10}; $1++ {",
            "    ${4:// Your code here}",
            "}"
        ],
        "description" : "Creates a for loop that iterates through a set of numbers with the index in Go"
    },
    "Go For...Range Loop" : {
        "prefix" : "cotrForRangeLoop",
        "body" : [
            "for ${1:index}, ${2:value} := range ${3:iterable} {",
            "    ${4:// Your code here}",
            "}"
        ],
        "description" : "Iterates over an iterable object in Go"
    },
    "Go While Loop" : {
        "prefix" : "cotrWhileLoop",
        "body" : [
            "for ${1:condition} {",
            "    ${2:// Your code here}",
            "}"
        ],
        "description" : "Creates a while loop in Go"
    },
    "Go Switch Statement" : {
        "prefix" : "cotrSwitch",
        "body" : [
            "switch ${1:variable} {",
            "    case ${2:value1}:",
            "        ${3:// Your code here}",
            "        break",
            "    case ${4:value2}:",
            "        ${5:// Your code here}",
            "        break",
            "    default:",
            "        ${6:// Your code here}",
            "}"
        ],
        "description" : "Creates a switch statement in Go"
    },
    "Go Function" : {
        "prefix" : "cotrFunc",
        "body" : [
            "func ${1:functionName}(${2:parameters}) ${3:returnType} {",
            "    ${4:// Your code here}",
            "}"
        ],
        "description" : "Creates a function in Go"
    },
    "Go Comment": {
		"prefix": "cotrComment",
		"body": [
			"// ${1:comment}"
		],
		"description": "Creates a single-line comment in Go"
	},
	"Go Multi-line Comment": {
		"prefix": "cotrMultiComment",
		"body": [
			"/*",
			" * ${1:comment}",
			" */"
		],
		"description": "Creates a multi-line comment in Go"
	}
}